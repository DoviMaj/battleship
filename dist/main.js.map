{"version":3,"sources":["webpack://battelship-game-vanilla/./src/index.js","webpack://battelship-game-vanilla/webpack/bootstrap","webpack://battelship-game-vanilla/webpack/runtime/define property getters","webpack://battelship-game-vanilla/webpack/runtime/hasOwnProperty shorthand","webpack://battelship-game-vanilla/webpack/runtime/make namespace object","webpack://battelship-game-vanilla/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEmE;;;;;;;UC9JnE;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"main.js","sourcesContent":["const Ship = (id, length, p, vertical) => {\n  // array of objects\n  let ship = [];\n  p.forEach((position) =>\n    ship.push({\n      id,\n      position,\n      hit: false,\n    })\n  );\n  function hit(n) {\n    ship.forEach((i) => {\n      if (i.position[0] === n[0] && i.position[1] === n[1]) {\n        i.hit = true;\n      }\n    });\n  }\n  function hasSunk() {\n    return ship.every((i) => i.hit === true);\n  }\n  const getLength = () => length;\n  const getShipId = () => id;\n  const getVertical = () => vertical;\n  const getAllPosition = () => p;\n  return {\n    p,\n    ship,\n    getVertical,\n    getLength,\n    getShipId,\n    getAllPosition,\n    hasSunk,\n    hit,\n  };\n};\n\nconst Gameboard = () => {\n  const ships = [];\n  const gameboard = {\n    0: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    1: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    2: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    3: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    4: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    5: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    6: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    7: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    8: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    9: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n  };\n  const checkIfPositionsAvailable = (p) => {\n    let canBeAdded = false;\n    p.forEach((position) => {\n      gameboard[position[0]][position[1]] === \"\"\n        ? (canBeAdded = true)\n        : (canBeAdded = false);\n    });\n    return canBeAdded;\n  };\n  const addShip = (id, length, position, vertical) => {\n    // store position of each part of ship in ship\n    let allPositions = [];\n    for (let i = 0; i < length; i++) {\n      if (vertical) {\n        allPositions.push([position[0] + i, position[1]]);\n      } else {\n        allPositions.push([position[0], position[1] + i]);\n      }\n    }\n    if (checkIfPositionsAvailable(allPositions)) {\n      // create and store ship\n      ships.push(Ship(id, length, allPositions, vertical));\n      updateGameboard();\n    }\n  };\n  const updateGameboard = () => {\n    ships.forEach((ship) => {\n      let p = ship.getAllPosition();\n      for (let i = 0; i < ship.getLength(); i++) {\n        if (ship.getVertical()) {\n          gameboard[p[i][0]][p[i][1]] = ship.getShipId();\n        } else {\n          gameboard[p[i][0]][p[i][1]] = ship.getShipId();\n        }\n      }\n    });\n  };\n  const receiveAttack = (a, b) => {\n    let p = gameboard[a][b];\n    if (p === \"\") {\n      gameboard[a][b] = \"missed\";\n      return true;\n    } else if (p !== \"\" && p !== \"missed\") {\n      gameboard[a][b] = \"attacked\";\n      ships.map((ship) => {\n        if (ship.getShipId() === p) {\n          ship.hit([a, b]);\n          return true;\n        }\n      });\n    } else {\n      return false;\n    }\n  };\n\n  const haveAllSunk = () => ships.every((ship) => ship.hasSunk());\n\n  const getGameboard = () => gameboard;\n  return {\n    haveAllSunk,\n    addShip,\n    getGameboard,\n    receiveAttack,\n  };\n};\n\n// player can attack other player gameboard (x)\n// player can add ships to gameboard (x)\n// player knows if its his turn(x)\n// AI can make random moves (x)\n// AI cant attack same cordinate twice ()\n\nlet turn = false;\nconst changeTurn = () => {\n  turn = !turn;\n};\n\nconst Player = (type) => {\n  const attack = (a, b) => {\n    if (type === \"Human\") {\n      PCGameboard.receiveAttack(a, b);\n    } else {\n      // AI cant attack same cordinate twice ()\n      const random = () => Math.floor(Math.random() * (10 - 0)) + 0;\n      HumanGameboard.receiveAttack(random(), random());\n    }\n    changeTurn();\n  };\n  const addShip = (id, length, position, vertical) => {\n    if (type === \"Human\") {\n      PCGameboard.addShip(id, length, position, vertical);\n    } else {\n      HumanGameboard.addShip(id, length, position, vertical);\n    }\n  };\n  return {\n    addShip,\n    attack,\n    changeTurn,\n  };\n};\n\n// gameflow\nconst HumanGameboard = Gameboard();\nconst PCGameboard = Gameboard();\nconst Human = Player(\"Human\");\nconst PC = Player(\"PC\");\n\nexport { Gameboard, Ship, Human, PC, HumanGameboard, PCGameboard };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/index.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}